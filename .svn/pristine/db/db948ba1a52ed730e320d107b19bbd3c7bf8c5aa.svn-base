/**
 * 
 */
package view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JPanel;

import model.MovableTetrisPiece;

/**
 * @author Garrett Lahmann
 * @version 2 December 2016
 */
public class PreviewPanel extends JPanel implements Observer {
    
    /** */
    private static final Dimension MIN_SIZE = new Dimension(100, 100);
    
    /**
     * 
     */
    public PreviewPanel() {
        // TODO Auto-generated constructor stub
        super();
        setBackground(Color.YELLOW);
        setOpaque(true);
        setPreferredSize(MIN_SIZE);
        setMinimumSize(MIN_SIZE);
        //setInits();
    }
    
    /**
     * Paints shapes to the canvas.
     * 
     * @param theGraphic    the graphic.
     */
    @Override
    public void paintComponent(final Graphics theGraphic) {
        super.paintComponent(theGraphic);
        final Graphics2D g2d = (Graphics2D) theGraphic;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, 
                               RenderingHints.VALUE_ANTIALIAS_ON);
        
        
    }

    /* (non-Javadoc)
     * @see java.util.Observer#update(java.util.Observable, java.lang.Object)
     */
    @Override
    public void update(Observable theObservable, Object theObject) {
        // TODO Auto-generated method stub
        if (theObject instanceof MovableTetrisPiece) {
            
            repaint();
        }
    }

}
